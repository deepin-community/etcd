From: Shengjing Zhu <zhsj@debian.org>
Date: Sun, 24 Feb 2019 23:51:41 +0800
Subject: Fix goroutine leak in clientv3 test

Too many goroutines running after all test(s).
1 instances of:
google.golang.org/grpc.(*addrConn).resetTransport(...)
	/<<PKGBUILDDIR>>/_build/src/google.golang.org/grpc/clientconn.go:1149 +0x3ab
created by google.golang.org/grpc.(*addrConn).connect
	/<<PKGBUILDDIR>>/_build/src/google.golang.org/grpc/clientconn.go:815 +0xb2
1 instances of:
google.golang.org/grpc.(*ccBalancerWrapper).watcher(...)
	/<<PKGBUILDDIR>>/_build/src/google.golang.org/grpc/balancer_conn_wrappers.go:69 +0x97
created by google.golang.org/grpc.newCCBalancerWrapper
	/<<PKGBUILDDIR>>/_build/src/google.golang.org/grpc/balancer_conn_wrappers.go:60 +0x10f
FAIL	github.com/coreos/etcd/clientv3	3.178s

Forwarded: no
---
 clientv3/main_test.go | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/clientv3/main_test.go b/clientv3/main_test.go
index 972abff..9079d55 100644
--- a/clientv3/main_test.go
+++ b/clientv3/main_test.go
@@ -62,6 +62,9 @@ func TestMain(m *testing.M) {
 		v = m.Run()
 	}
 
+	// sometime gRPC goroutine is still not closed, wait 1 more second.
+	time.Sleep(time.Second)
+
 	if v == 0 && testutil.CheckLeakedGoroutine() {
 		os.Exit(1)
 	}
